<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">
    <!--
     example_1 을 위하여 persistence.xml 파일을 작성

    JPA 는 persistence.xml 을 사용 하여 필요한 설정 정보를 관리
    META-INF/persistence.xml 클래스 패스 경로에 있으면 별도 설정 상관 없이 JPA 인식
    -->
    
    <persistence-unit name="jpabook">
        <properties>
            <!-- 필수 속성 -->
            <property name="jakarta.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="jakarta.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="jakarta.persistence.jdbc.user" value="sa"/>
            <property name="jakarta.persistence.jdbc.password" value=""/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />

            
            <!-- 옵션 -->
            <!-- show_sql 을 true 로 설정 시 콘소에 DDL 문을 출력 가능 -->
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="hibernate.use_sql_comments" value="true" />
            <property name="hibernate.id.new_generator_mappings" value="true" />
            <!-- 해당 옵션 사용 시 어플리케이션 실행 시점에 데이터 베이스 테이블을 자동으로 생성
                 Option Value
                 create : 기존 테이블을 삭제하고 새로 생성 (DROP + CREATE)
                 create-drop : create 속성에 추가로 어플리케이션을 종료할 때 생성한 DDL 을 제거, DROP + CREATE + DROP
                 update : 데이터 베이스 테이블과 테이블과 엔티티 매핑 정ㄷ보를 비교해서 변경 사항만 수정
                 validate : 데이터베이스 테이블과 엔티티 매핑 정보를 비교해서 차이가 있으면 경고를 남기고 어플리 케이션을 실행 시키지 않고 이 설정은 DDL 을 수정하지 않음
                 none : 자동 생성 기능을 사요하지 않으로면 hibernate.hbm2ddl.auto 속성 자체를 none 옵션 값 사용

                 !!!!! 주의 사항 !!!!!
                 실제로 운영 서버에서는 create, create-drop, update 처럼 DDL 을 수정하는 옵션은 절대 사용하면 안된다 !!
                 !!!!!!!!!!!!!!!!!!!!
            -->

            <property name="hibernate.hbm2ddl.auto" value="create" />

        </properties>
    </persistence-unit>

</persistence>
