package com.example.orm_jpa.example_6;

public class ExampleMain {

    // 다양한 연관 관계 매핑
    // 1. 다대일 (ManyToOne)
    // 2. 일대다 (OneToMany)
    // 3. 일대일 (OneToOne)
    // 4. 다대다 (ManyToMany)

    // 먼저 연관 관계가 있는 두 엔티티가 일대일 관계인지 일대다 관계인지 다중성을 고려
    // 다중성을 판단하기 어려운 경우에는 반대 방향을 고려를 해보면 됨
    // 단방향 관계인지 양방향 관계인지 파악 후 양방향 관계이면 연관 관계 주인을 정해주어야 함

    // 테이블은 외래 키 하나로 조인을 사용하여 양방향 쿼리가 가능하므로 사실 상 방향 이라느 개념은 없지만 반면에 객체는
    // 참조용 필드를 가지고 있는 객체만 연관 된 객체를 조회가 가능 객체 관계에서 한쪽만 참조하는 것을 단방향 양쪽이 서로 참조하는 것을 양방향 관계라 한다.

    // JPA 는 두 객체 연관 관계 중 하나를 정해서 데이터 베이스 외래 키를 관리하는데 이것을 연관 관계 주인이라 함
    // 외리 키를 가진 테이블과 매핑한 엔티티가 외래 키를 관리 하는 게 효율적이므로 보통 이곳을 연관 관계의 주인으로 선택
    // (주인이 아닌 방향은 외래 키를 변경 할 수 없고 읽기만 가능)



    public static void main(String[] args) {



    }

}
